<record class="{props.class} pt-5 mr-5">
  <div class="d-flex justify-content-between">
    <h1>{props.item.title()}</h1>
    <div>id {props.item.id()}</div>
  </div>

  <div
    if={props.item.hasImage() || props.item.hasCopy() || props.item.hasStudy()}
    class="d-flex justify-content-between"
  >
    <div class="primary w-100 row">
      <div class="col-7">
        <img
          if={props.item.hasImage()}
          class="d-block"
          style="max-height: 576px; max-width: 100%;"
          src={primaryUrl()}
        />
      </div>
      <div class="col-2">
        <div class="d-inline-block h-100 ml-7">
          <div class="h-100 d-flex flex-column justify-content-between">
            <help-trigger class="d-print-none align-self-end" />

            <size-indicator
              if={props.item.hasImage()}
              wh={props.item.wh()}
              ref-height={170.0}
              render-height={100}
            />
          </div>
        </div>
      </div>
      <div class="col-3">
        <div class="study text-end" if={props.item.hasStudy()}>
          <div class="fw-bold mb-2">{cap(t('study'))}</div>

          <img class="w-50 mb-2" src="{props.item.studyImage()}" />
          
          <small>
            <raw class="d-block text-end" html={props.item.studyCaption()} />
          </small>
        </div>

        <div class="copy" if={props.item.hasCopy()}>
          <div class="fw-bold mb-2">{cap(t('copy'))}</div>

          <img class="d-block w-50 mb-2" src="{props.item.copyImage()}" />
          
          <small>
            <raw html={props.item.copyCaption()} />
          </small>
        </div>
      </div>
    </div>
  </div>

  <div class="row flex-wrap" if={!props.item.hasImage()}>
    <template each={quote in props.item.descriptionUnident()}>
      <div class="w-50 mb-3">{quote}</div>
      <div class="w-50 mb-3"></div>
    </template>
  </div>

  <small class="d-block mt-2">{props.item.credits()}</small>

  <ul class="fields my-4">
    <li><span>{cap(t('artist'))}</span><strong>{props.item.artistList()}</strong></li>
    <li><span>{cap(t('date'))}</span><strong>{props.item.date()}</strong></li>
  </ul>

  <ul class="fields my-4">
    <li><span>{cap(t('medium'))}</span><strong>{props.item.medium()}</strong></li>
    <li><span>{cap(t('technique'))}</span><strong>{props.item.technique()}</strong></li>
    <li><span>{cap(t('dimensions'))}</span><strong>{props.item.dimensions()}</strong></li>
    <li><span>{cap(t('current_location'))}</span><strong>{props.item.location()}</strong></li>
    <li class="inventory-no">
      <span>{cap(t('inventory_no'))}</span>
      <span class="csl">
        <span each={no in props.item.inventoryNo()}>
          <strong>{no[0]}</strong>
          <a
            target="_blank"
            href={no[1]}
          ><dfk-icon type="external-link" /></a>
        </span>
      </span>
    </li>
  </ul>

  <div class="dfk-expose">
    <help-trigger class="d-print-none" />

    <ul class="fields type">
      <li class="d-flex">
        <div class="label">{cap(t('type'))}</div>
        <strong>{props.item.type()}</strong>
      </li>
    </ul>

    <div class="location mt-4 d-flex">
      <div class="label">
        {cap(t('location'))}
        
        <help-trigger class="d-print-none position-static ml-2" />
      </div>

      <div>
        <div
          each={room in Object.entries(props.item.room())}
          class="d-flex room"
        >
          <div class="fw-bold mr-5">{room[0]}</div>
          <div class="fw-bold">
            <div each={e in room[1]}>
              {e}

              <a if={roomUrl(room[0], e)} href={roomUrl(room[0], e)}>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64">
                  <path d="M62 50c0-.664-.536-1.2-1.2-1.2H3.2c-.664 0-1.2.536-1.2 1.2 0 .664.536 1.2 1.2 1.2h57.6c.664 0 1.2-.536 1.2-1.2zm-15.686-6.18l1.138 1.38h-2.29l1.152-1.38zM31.9 38.074l5.937 7.126H25.963l5.937-7.126zM16.363 45.2l1.237-1.484 1.237 1.484h-2.474zm-2.812-6.343l2.485 2.983-2.8 3.36H8.302l5.25-6.343zm4.554-5.503l2.452 3.063-2.957 3.547-2.491-2.989 2.996-3.621zm4.914-5.937l2.518 3.023-3.412 4.094-2.455-3.07 3.35-4.047zm7.402-2.837l-3.32 3.984-2.525-3.028 3.319-4.01 2.526 3.054zm4.12-4.945l-2.559 3.071-2.53-3.064L32 16.564l2.542 3.071zm4.784 5.78l-2.563 3.076-3.224-3.902 2.561-3.072 3.226 3.899zm5.005 6.05l-2.514 3.144-3.498-4.234 2.563-3.078 3.449 4.168zm-7.576.785l3.53 4.273-3.21 4.011-3.611-4.334 3.291-3.95zm-8.091-1.81l3.312-3.976 3.224 3.903-3.299 3.957-3.237-3.884zm-1.836 9.972l-3.17-3.964 3.443-4.132 3.237 3.884-3.51 4.212zM21.963 45.2l-2.8-3.36 2.924-3.51 3.171 3.965-2.421 2.905h-.874zm19 0l-2.32-2.783 3.203-4.003 2.911 3.522-2.72 3.264h-1.074zm7.928-8.225l-2.571 3.087-2.943-3.562 2.518-3.146 2.996 3.621zM55.7 45.2h-5.134l-2.69-3.256 2.574-3.087 5.25 6.343zm-41.335 2.4H60.8l-8.788-10.619-1.557-1.881-3.03-3.66-1.563-1.89-3.417-4.128-1.558-1.883-3.225-3.898-.33-.396L32 12.8l-5.324 6.432-.338.408-8.2 9.91-1.563 1.89-3.03 3.66-1.557 1.881L3.2 47.6h11.164z" />
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div if={props.item.notes().length > 0} class="notes mt-4">
      <div class="d-flex">
        <div class="label">{cap(t('notes'))}</div>
        <div class="fw-bold">
          <p each={note in props.item.notes()}>{note}</p>
        </div>
      </div>
    </div>

    <div class="sources mt-4 d-flex">
      <div class="label">
        {cap(t('sources'))}
      </div>
      <div>
        <div each={b in props.item.biblio()} class="source d-flex">
          <div class="description fw-bold">
            {b.biblio.short_title}, {b.pages}
          </div>

          <a
            if={b.biblio['IIIF manifest']}
            href="https://static.dfkg.org/viewers_poc/mirador/#?manifest={b.biblio['IIIF manifest']}&canvas={b.canvas_id}"
            target="_blank"
          >
            <dfk-icon type="book" />
          </a>

          <a
            if={!b.biblio['IIIF manifest'] && b.biblio['link']}
            href={b.biblio['link']}
            target="_blank"
          >
            <dfk-icon type="book" />
          </a>
        </div>
      </div>
    </div>

    <div if={hasAnyLinks()} class="links d-flex mt-4">
      <div class="label">{cap(t('links'))}</div>
      <div>
        <div class="fw-bold">
          <template if={hasOneArtist()}>
            {cap(t('artist_at_0')) + ' '}

            <artist-id-links
              type="wikidata"
              ids={props.item.artistWikidataIds()}
            />

            <template if={props.item.artistULANIds() != 0}>
              {' ' + t('artist_at_1') + ' '}

              <artist-id-links
                type="ulan"
                ids={props.item.artistULANIds()}
              />
            </template>
          </template>

          <template if={hasManyArtists()}>
            {cap(t('artists_at_0')) + ' '}

            <artist-id-links
              type="wikidata"
              ids={props.item.artistWikidataIds()}
            />

            <template if={props.item.artistULANIds().length != 0}>
              {t('artists_at_1')}

              <artist-id-links
                type="ulan"
                ids={props.item.artistULANIds()}
              />
            </template>
          </template>

          <div if={hasPlateLink()}>
            {cap(t('plate_at')) + ' '}

            <a href={props.item.plateLink()} target="_blank">
              Chalcographie du Louvre, Ateliers d'art des musées nationaux,
              moulage et chalcographie, Saint-Denis
            </a>
          </div>
        </div>

        <div class="fw-bold">
          <template if={hasLocation()}>
            {cap(t('work_of_art_at')) + ' '}
            <a href={props.item.collectionLink()}>
              {props.item.location()}
            </a>
          </template>
        </div>
      </div>
    </div>
  </div>

  <div class="dfk-expose mt-5">
    <div class="mb-5">
      <strong>{cap(t('ref_entry'))}</strong>
      <div>
        Castor, Markus A., Anne Klammt, and Sofya Dmitrieva (eds.), “Académie
        Royale Art Collection Database. Artwork ID {props.item.id()} ,” DFK Paris. August 31,
        2023. URL:&nbsp;<a href="{props.item.url()}">{props.item.url()}</a>
      </div>
    </div>

    <div class="mb-5">
      <strong>{cap(t('ref_dataset'))}</strong>
      <div>
        Castor, Markus A., Anne Klammt, and Sofya Dmitrieva (eds.), “Académie
        Royale Art Collection Database,” DFK Paris. August 31, 2023. URL:
        <a href={baseUrl()}>{baseUrl()}</a>
      </div>
    </div>

    <div class="mb-5">
      <strong>{cap(t('contact'))}</strong>
      <div>{t('contact_text')}</div>
    </div>

    <div>
      <strong>{cap(t('use'))}</strong>
      <div>{t('use_text')}</div>
    </div>
  </div>

  <script>
    import {i18n, util} from '@wendig/lib'

    import config from '../lib/dotenv'
    import {baseUrl, roomUrl} from '../lib/util'

    import ArtistIdLinks from './artist_id_links.riot'
    import DfkIcon from '@dfk-paris/frontend/src/components/icon.riot'
    import DfkPopup from '@dfk-paris/frontend/src/components/popup.riot'
    import DfkRaw from '@dfk-paris/frontend/src/components/raw.riot'
    import Raw from './raw.riot'
    import SizeIndicator from './size_indicator.riot'

    export default class {
      static components = {
        ArtistIdLinks,
        DfkIcon,
        DfkPopup,
        DfkRaw,
        Raw,
        SizeIndicator
      }

      constructor() {
        this.t = i18n.translate
        this.cap = util.capitalize
        this.baseUrl = baseUrl
        this.roomUrl = roomUrl
      }

      primaryUrl() {
        return this.state.primaryUrl || this.props.item.imageUrl()
      }

      additionalUrls() {
        return this.props.item.additionalUrls()
      }

      setPrimary(url) {
        this.update({primaryUrl: url})
      }

      hasAnyArtists() {
        return this.props.item.artistWikidataIds().length > 0
      }

      hasOneArtist() {
        return this.props.item.artistWikidataIds().length == 1
      }

      hasManyArtists() {
        return this.props.item.artistWikidataIds().length > 1
      }

      hasPlateLink() {
        return !!this.props.item.plateLink()
      }

      hasLocation() {
        return !['lost', 'unidentified'].includes(this.props.item.location())
      }

      hasAnyLinks() {
        return this.hasAnyArtists() || this.hasPlateLink() || this.hasLocation()
      }

      locale() {
        return i18n.locale
      }
    }
  </script>
</record>
