<record class="{props.class} pt-5 mr-5">
  <div class="d-flex justify-content-between">
    <h1>{props.item.title()}</h1>
    <div>id {props.item.id()}</div>
  </div>

  <div
    if={props.item.hasImage() || props.item.hasCopy() || props.item.hasStudy()}
    class="d-flex justify-content-between"
  >
    <div class="primary w-100 row">
      <div class="col-4">
        <img
          if={props.item.hasImage()}
          class="d-block w-100"
          src={primaryUrl()}
        />

        <div
          if={!props.item.hasImage()}
          class="w-100"
        >
          <blockquote each={quote in props.item.descriptionUnident()}>
            <dfk-icon type="quotes" />

            {quote}
          </blockquote>
        </div>

        <blockquote>
          
        </blockquote>
      </div>
      <div class="col-4">
        <div class="d-inline-block h-100 ml-7">
          <div class="h-100 d-flex flex-column justify-content-between">
            <help-trigger class="d-print-none align-self-end" />

            <size-indicator
              if={props.item.hasImage()}
              wh={props.item.wh()}
              ref-height={170.0}
              render-height={100}
            />
          </div>
        </div>
      </div>
      <div class="col-4">
        <div class="study text-end" if={props.item.hasStudy()}>
          <div class="fw-bold mb-2">{cap(t('study'))}</div>

          <img class="w-50 mb-2" src="{props.item.studyImage()}" />
          
          <small>
            <raw class="d-block text-end" html={props.item.studyCaption()} />
          </small>
        </div>

        <div class="copy" if={props.item.hasCopy()}>
          <div class="fw-bold mb-2">{cap(t('copy'))}</div>

          <img class="d-block w-50 mb-2" src="{props.item.copyImage()}" />
          
          <small>
            <raw html={props.item.copyCaption()} />
          </small>
        </div>
      </div>
    </div>


    <!-- div class="secondary d-flex flex-wrap justify-content-end align-content-start">
      <img
        each={url in props.item.additionalUrls()}
        src={url}
        class="image ml-2 mb-2 {url == primaryUrl() ? 'active' : ''}"
        onclick={event => setPrimary(url, event)}
      />
    </div -->
  </div>

  <small class="d-block mt-2">{props.item.credits()}</small>

  <ul class="fields my-4">
    <li><span>{cap(t('artist'))}</span><strong>{props.item.artistList()}</strong></li>
    <li><span>{cap(t('date'))}</span><strong>{props.item.date()}</strong></li>
  </ul>

  <ul class="fields my-4">
    <li><span>{cap(t('medium'))}</span><strong>{props.item.medium()}</strong></li>
    <li><span>{cap(t('technique'))}</span><strong>{props.item.technique()}</strong></li>
    <li><span>{cap(t('dimensions'))}</span><strong>{props.item.dimensions()}</strong></li>
    <li><span>{cap(t('current_location'))}</span><strong>{props.item.location()}</strong></li>
    <li class="inventory-no">
      <span>{cap(t('inventory_no'))}</span>
      <span class="csl">
        <span each={no in props.item.inventoryNo()}>
          <strong>{no[0]}</strong>
          <a
            target="_blank"
            href={no[1]}
          ><dfk-icon type="external-link" /></a>
        </span>
      </span>
    </li>
  </ul>

  <div class="dfk-expose">
    <help-trigger class="d-print-none" />

    <ul class="fields type">
      <li class="d-flex">
        <div class="label">{cap(t('type'))}</div>
        <strong>{props.item.type()}</strong>
      </li>
    </ul>

    <div class="location mt-4 d-flex">
      <div class="label">
        {cap(t('location'))}
        
        <help-trigger class="d-print-none position-static ml-2" />
      </div>

      <div>
        <div
          each={room in Object.entries(props.item.room())}
          class="d-flex room"
        >
          <div class="fw-bold mr-5">{room[0]}</div>
          <div class="fw-bold">
            <div each={e in room[1]}>{e}</div>
          </div>
        </div>
      </div>
    </div>

    <div if={props.item.notes().length > 0} class="notes mt-4">
      <div class="d-flex">
        <div class="label">{cap(t('notes'))}</div>
        <div class="fw-bold">
          <p each={note in props.item.notes()}>{note}</p>
        </div>
      </div>
    </div>

    <div class="sources mt-4 d-flex">
      <div class="label">
        {cap(t('sources'))}
      </div>
      <div>
        <div each={b in props.item.biblio()} class="source d-flex">
          <div class="description fw-bold">
            {b.biblio.short_title}, {b.pages}
          </div>

          <a
            if={b.biblio['IIIF manifest']}
            href="https://static.dfkg.org/viewers_poc/mirador/#?manifest={b.biblio['IIIF manifest']}&canvas={b.canvas_id}"
            target="_blank"
          >
            <dfk-icon type="book" />
          </a>

          <a
            if={!b.biblio['IIIF manifest'] && b.biblio['link']}
            href={b.biblio['link']}
            target="_blank"
          >
            <dfk-icon type="book" />
          </a>
        </div>
      </div>
    </div>

    <div if={hasAnyLinks()} class="links d-flex mt-4">
      <div class="label">{cap(t('links'))}</div>
      <div>
        <div class="fw-bold">
          <template if={hasOneArtist()}>
            {cap(t('artist_at_0')) + ' '}

            <artist-id-links
              type="wikidata"
              ids={props.item.artistWikidataIds()}
            />

            <template if={props.item.artistULANIds() != 0}>
              {' ' + t('artist_at_1') + ' '}

              <artist-id-links
                type="ulan"
                ids={props.item.artistULANIds()}
              />
            </template>
          </template>

          <template if={hasManyArtists()}>
            {cap(t('artists_at_0')) + ' '}

            <artist-id-links
              type="wikidata"
              ids={props.item.artistWikidataIds()}
            />

            <template if={props.item.artistULANIds().length != 0}>
              {t('artists_at_1')}

              <artist-id-links
                type="ulan"
                ids={props.item.artistULANIds()}
              />
            </template>
          </template>

          <div if={hasPlateLink()}>
            {cap(t('plate_at')) + ' '}

            <a href={props.item.plateLink()} target="_blank">
              Chalcographie du Louvre, Ateliers d'art des musées nationaux,
              moulage et chalcographie, Saint-Denis
            </a>
          </div>
        </div>

        <!-- div>
          {cap(t('artists_at_dfk')) + ' '}

          <artist-id-links
            type="dfk"
            ids={props.item.artistWikidataIds()}
          />
        </div -->
        <div class="fw-bold">
          <template if={hasLocation()}>
            {cap(t('work_of_art_at')) + ' '}
            <a href={props.item.collectionLink()}>
              {props.item.location()}
            </a>
          </template>
        </div>
      </div>
    </div>
  </div>

  <div class="dfk-expose mt-5">
    <div class="mb-5">
      <strong>{cap(t('ref_entry'))}</strong>
      <div>
        Castor, Markus A., Anne Klammt, and Sofya Dmitrieva (eds.), “Académie
        Royale Art Collection Database. Artwork ID {props.item.id()} ,” DFK Paris. August 31,
        2023. URL:&nbsp;<a href="{props.item.url()}">{props.item.url()}</a>
      </div>
    </div>

    <div class="mb-5">
      <strong>{cap(t('ref_dataset'))}</strong>
      <div>
        Castor, Markus A., Anne Klammt, and Sofya Dmitrieva (eds.), “Académie
        Royale Art Collection Database,” DFK Paris. August 31, 2023. URL:
        <a href={baseUrl()}>{baseUrl()}</a>
      </div>
    </div>

    <div class="mb-5">
      <strong>{cap(t('contact'))}</strong>
      <div>
        This entry is the result of ongoing research. We would be happy to
        improve or correct it. If you are aware of additional information or
        inconsistences, please contact us at
        collection-academieroyale@dfk-paris.org.
      </div>
    </div>

    <div>
      <strong>{cap(t('use'))}</strong>
      <div>
        DFK Paris is not the copyright holder of any of the images used. To
        reuse images, please refer to the guidelines on the original collection
        website. Other information may be used freely.
      </div>
    </div>
  </div>

  <script>
    import {i18n, util} from '@wendig/lib'

    import {baseUrl} from '../lib/util'

    import ArtistIdLinks from './artist_id_links.riot'
    import DfkIcon from '@dfk-paris/frontend/src/components/icon.riot'
    import DfkPopup from '@dfk-paris/frontend/src/components/popup.riot'
    import DfkRaw from '@dfk-paris/frontend/src/components/raw.riot'
    import Raw from './raw.riot'
    import SizeIndicator from './size_indicator.riot'

    export default class {
      static components = {
        ArtistIdLinks,
        DfkIcon,
        DfkPopup,
        DfkRaw,
        Raw,
        SizeIndicator
      }

      constructor() {
        this.t = i18n.translate
        this.cap = util.capitalize
        this.baseUrl = baseUrl
      }

      primaryUrl() {
        return this.state.primaryUrl || this.props.item.imageUrl()
      }

      additionalUrls() {
        return this.props.item.additionalUrls()
      }

      setPrimary(url) {
        this.update({primaryUrl: url})
      }

      hasAnyArtists() {
        return this.props.item.artistWikidataIds().length > 0
      }

      hasOneArtist() {
        return this.props.item.artistWikidataIds().length == 1
      }

      hasManyArtists() {
        return this.props.item.artistWikidataIds().length > 1
      }

      hasPlateLink() {
        return !!this.props.item.plateLink()
      }

      hasLocation() {
        return !['lost', 'unidentified'].includes(this.props.item.location())
      }

      hasAnyLinks() {
        return this.hasAnyArtists() || this.hasPlateLink() || this.hasLocation()
      }

      locale() {
        return i18n.locale
      }
    }
  </script>
</record>
